/* 
 * Stocks
 *
 * <h3>Rate limits</h3>                     Free subscriptions are subject to daily limits. To know how much requests you have left look at the following headers in the response.<br />                     1. <strong>x-ratelimit-limit</strong> - The total number of requests that you are allowed to make in a given period (hour/day)<br />                     2. <strong>x-ratelimit-remaining</strong> - The number of remaining requests that you can perform in the current period.<br />                     3. <strong>x-ratelimit-reset</strong> - The number of seconds until the current period resets.<br />                     <br />                     <br />                     You don't have an API key? <a href=\"https://www.equibles.com/api/pricing\" target=\"_blank\">Get one for free here.</a>
 *
 * OpenAPI spec version: v1
 * Contact: contact@equibles.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Equibles.Stocks.Client.SwaggerDateConverter;

namespace Equibles.Stocks.Model
{
    /// <summary>
    /// PriceSummary
    /// </summary>
    [DataContract]
        public partial class PriceSummary :  IEquatable<PriceSummary>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PriceSummary" /> class.
        /// </summary>
        /// <param name="companyName">companyName.</param>
        /// <param name="marketCap">marketCap.</param>
        /// <param name="currentPrice">currentPrice.</param>
        /// <param name="todayOpen">todayOpen.</param>
        /// <param name="todayHigh">todayHigh.</param>
        /// <param name="todayLow">todayLow.</param>
        /// <param name="todayTime">todayTime.</param>
        /// <param name="todayVolume">todayVolume.</param>
        /// <param name="todayChange">todayChange.</param>
        /// <param name="todayChangePercentage">todayChangePercentage.</param>
        /// <param name="latestCompletedTradingDayOpen">latestCompletedTradingDayOpen.</param>
        /// <param name="latestCompletedTradingDayHigh">latestCompletedTradingDayHigh.</param>
        /// <param name="latestCompletedTradingDayLow">latestCompletedTradingDayLow.</param>
        /// <param name="latestCompletedTradingDayClose">latestCompletedTradingDayClose.</param>
        /// <param name="latestCompletedTradingDayChangePercentage">latestCompletedTradingDayChangePercentage.</param>
        /// <param name="latestCompletedTradingDayChange">latestCompletedTradingDayChange.</param>
        /// <param name="latestCompletedTradingDayTime">latestCompletedTradingDayTime.</param>
        /// <param name="latestCompletedTradingDayVolume">latestCompletedTradingDayVolume.</param>
        /// <param name="fiftyTwoWeekLow">fiftyTwoWeekLow.</param>
        /// <param name="fiftyTwoWeekHigh">fiftyTwoWeekHigh.</param>
        public PriceSummary(string companyName = default(string), long? marketCap = default(long?), double? currentPrice = default(double?), double? todayOpen = default(double?), double? todayHigh = default(double?), double? todayLow = default(double?), DateTime? todayTime = default(DateTime?), long? todayVolume = default(long?), double? todayChange = default(double?), double? todayChangePercentage = default(double?), double? latestCompletedTradingDayOpen = default(double?), double? latestCompletedTradingDayHigh = default(double?), double? latestCompletedTradingDayLow = default(double?), double? latestCompletedTradingDayClose = default(double?), double? latestCompletedTradingDayChangePercentage = default(double?), double? latestCompletedTradingDayChange = default(double?), DateTime? latestCompletedTradingDayTime = default(DateTime?), long? latestCompletedTradingDayVolume = default(long?), double? fiftyTwoWeekLow = default(double?), double? fiftyTwoWeekHigh = default(double?))
        {
            this.CompanyName = companyName;
            this.MarketCap = marketCap;
            this.CurrentPrice = currentPrice;
            this.TodayOpen = todayOpen;
            this.TodayHigh = todayHigh;
            this.TodayLow = todayLow;
            this.TodayTime = todayTime;
            this.TodayVolume = todayVolume;
            this.TodayChange = todayChange;
            this.TodayChangePercentage = todayChangePercentage;
            this.LatestCompletedTradingDayOpen = latestCompletedTradingDayOpen;
            this.LatestCompletedTradingDayHigh = latestCompletedTradingDayHigh;
            this.LatestCompletedTradingDayLow = latestCompletedTradingDayLow;
            this.LatestCompletedTradingDayClose = latestCompletedTradingDayClose;
            this.LatestCompletedTradingDayChangePercentage = latestCompletedTradingDayChangePercentage;
            this.LatestCompletedTradingDayChange = latestCompletedTradingDayChange;
            this.LatestCompletedTradingDayTime = latestCompletedTradingDayTime;
            this.LatestCompletedTradingDayVolume = latestCompletedTradingDayVolume;
            this.FiftyTwoWeekLow = fiftyTwoWeekLow;
            this.FiftyTwoWeekHigh = fiftyTwoWeekHigh;
        }
        
        /// <summary>
        /// Gets or Sets CompanyName
        /// </summary>
        [DataMember(Name="companyName", EmitDefaultValue=false)]
        public string CompanyName { get; set; }

        /// <summary>
        /// Gets or Sets MarketCap
        /// </summary>
        [DataMember(Name="marketCap", EmitDefaultValue=false)]
        public long? MarketCap { get; set; }

        /// <summary>
        /// Gets or Sets CurrentPrice
        /// </summary>
        [DataMember(Name="currentPrice", EmitDefaultValue=false)]
        public double? CurrentPrice { get; set; }

        /// <summary>
        /// Gets or Sets TodayOpen
        /// </summary>
        [DataMember(Name="todayOpen", EmitDefaultValue=false)]
        public double? TodayOpen { get; set; }

        /// <summary>
        /// Gets or Sets TodayHigh
        /// </summary>
        [DataMember(Name="todayHigh", EmitDefaultValue=false)]
        public double? TodayHigh { get; set; }

        /// <summary>
        /// Gets or Sets TodayLow
        /// </summary>
        [DataMember(Name="todayLow", EmitDefaultValue=false)]
        public double? TodayLow { get; set; }

        /// <summary>
        /// Gets or Sets TodayTime
        /// </summary>
        [DataMember(Name="todayTime", EmitDefaultValue=false)]
        public DateTime? TodayTime { get; set; }

        /// <summary>
        /// Gets or Sets TodayVolume
        /// </summary>
        [DataMember(Name="todayVolume", EmitDefaultValue=false)]
        public long? TodayVolume { get; set; }

        /// <summary>
        /// Gets or Sets TodayChange
        /// </summary>
        [DataMember(Name="todayChange", EmitDefaultValue=false)]
        public double? TodayChange { get; set; }

        /// <summary>
        /// Gets or Sets TodayChangePercentage
        /// </summary>
        [DataMember(Name="todayChangePercentage", EmitDefaultValue=false)]
        public double? TodayChangePercentage { get; set; }

        /// <summary>
        /// Gets or Sets LatestCompletedTradingDayOpen
        /// </summary>
        [DataMember(Name="latestCompletedTradingDayOpen", EmitDefaultValue=false)]
        public double? LatestCompletedTradingDayOpen { get; set; }

        /// <summary>
        /// Gets or Sets LatestCompletedTradingDayHigh
        /// </summary>
        [DataMember(Name="latestCompletedTradingDayHigh", EmitDefaultValue=false)]
        public double? LatestCompletedTradingDayHigh { get; set; }

        /// <summary>
        /// Gets or Sets LatestCompletedTradingDayLow
        /// </summary>
        [DataMember(Name="latestCompletedTradingDayLow", EmitDefaultValue=false)]
        public double? LatestCompletedTradingDayLow { get; set; }

        /// <summary>
        /// Gets or Sets LatestCompletedTradingDayClose
        /// </summary>
        [DataMember(Name="latestCompletedTradingDayClose", EmitDefaultValue=false)]
        public double? LatestCompletedTradingDayClose { get; set; }

        /// <summary>
        /// Gets or Sets LatestCompletedTradingDayChangePercentage
        /// </summary>
        [DataMember(Name="latestCompletedTradingDayChangePercentage", EmitDefaultValue=false)]
        public double? LatestCompletedTradingDayChangePercentage { get; set; }

        /// <summary>
        /// Gets or Sets LatestCompletedTradingDayChange
        /// </summary>
        [DataMember(Name="latestCompletedTradingDayChange", EmitDefaultValue=false)]
        public double? LatestCompletedTradingDayChange { get; set; }

        /// <summary>
        /// Gets or Sets LatestCompletedTradingDayTime
        /// </summary>
        [DataMember(Name="latestCompletedTradingDayTime", EmitDefaultValue=false)]
        public DateTime? LatestCompletedTradingDayTime { get; set; }

        /// <summary>
        /// Gets or Sets LatestCompletedTradingDayVolume
        /// </summary>
        [DataMember(Name="latestCompletedTradingDayVolume", EmitDefaultValue=false)]
        public long? LatestCompletedTradingDayVolume { get; set; }

        /// <summary>
        /// Gets or Sets FiftyTwoWeekLow
        /// </summary>
        [DataMember(Name="fiftyTwoWeekLow", EmitDefaultValue=false)]
        public double? FiftyTwoWeekLow { get; set; }

        /// <summary>
        /// Gets or Sets FiftyTwoWeekHigh
        /// </summary>
        [DataMember(Name="fiftyTwoWeekHigh", EmitDefaultValue=false)]
        public double? FiftyTwoWeekHigh { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PriceSummary {\n");
            sb.Append("  CompanyName: ").Append(CompanyName).Append("\n");
            sb.Append("  MarketCap: ").Append(MarketCap).Append("\n");
            sb.Append("  CurrentPrice: ").Append(CurrentPrice).Append("\n");
            sb.Append("  TodayOpen: ").Append(TodayOpen).Append("\n");
            sb.Append("  TodayHigh: ").Append(TodayHigh).Append("\n");
            sb.Append("  TodayLow: ").Append(TodayLow).Append("\n");
            sb.Append("  TodayTime: ").Append(TodayTime).Append("\n");
            sb.Append("  TodayVolume: ").Append(TodayVolume).Append("\n");
            sb.Append("  TodayChange: ").Append(TodayChange).Append("\n");
            sb.Append("  TodayChangePercentage: ").Append(TodayChangePercentage).Append("\n");
            sb.Append("  LatestCompletedTradingDayOpen: ").Append(LatestCompletedTradingDayOpen).Append("\n");
            sb.Append("  LatestCompletedTradingDayHigh: ").Append(LatestCompletedTradingDayHigh).Append("\n");
            sb.Append("  LatestCompletedTradingDayLow: ").Append(LatestCompletedTradingDayLow).Append("\n");
            sb.Append("  LatestCompletedTradingDayClose: ").Append(LatestCompletedTradingDayClose).Append("\n");
            sb.Append("  LatestCompletedTradingDayChangePercentage: ").Append(LatestCompletedTradingDayChangePercentage).Append("\n");
            sb.Append("  LatestCompletedTradingDayChange: ").Append(LatestCompletedTradingDayChange).Append("\n");
            sb.Append("  LatestCompletedTradingDayTime: ").Append(LatestCompletedTradingDayTime).Append("\n");
            sb.Append("  LatestCompletedTradingDayVolume: ").Append(LatestCompletedTradingDayVolume).Append("\n");
            sb.Append("  FiftyTwoWeekLow: ").Append(FiftyTwoWeekLow).Append("\n");
            sb.Append("  FiftyTwoWeekHigh: ").Append(FiftyTwoWeekHigh).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PriceSummary);
        }

        /// <summary>
        /// Returns true if PriceSummary instances are equal
        /// </summary>
        /// <param name="input">Instance of PriceSummary to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PriceSummary input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CompanyName == input.CompanyName ||
                    (this.CompanyName != null &&
                    this.CompanyName.Equals(input.CompanyName))
                ) && 
                (
                    this.MarketCap == input.MarketCap ||
                    (this.MarketCap != null &&
                    this.MarketCap.Equals(input.MarketCap))
                ) && 
                (
                    this.CurrentPrice == input.CurrentPrice ||
                    (this.CurrentPrice != null &&
                    this.CurrentPrice.Equals(input.CurrentPrice))
                ) && 
                (
                    this.TodayOpen == input.TodayOpen ||
                    (this.TodayOpen != null &&
                    this.TodayOpen.Equals(input.TodayOpen))
                ) && 
                (
                    this.TodayHigh == input.TodayHigh ||
                    (this.TodayHigh != null &&
                    this.TodayHigh.Equals(input.TodayHigh))
                ) && 
                (
                    this.TodayLow == input.TodayLow ||
                    (this.TodayLow != null &&
                    this.TodayLow.Equals(input.TodayLow))
                ) && 
                (
                    this.TodayTime == input.TodayTime ||
                    (this.TodayTime != null &&
                    this.TodayTime.Equals(input.TodayTime))
                ) && 
                (
                    this.TodayVolume == input.TodayVolume ||
                    (this.TodayVolume != null &&
                    this.TodayVolume.Equals(input.TodayVolume))
                ) && 
                (
                    this.TodayChange == input.TodayChange ||
                    (this.TodayChange != null &&
                    this.TodayChange.Equals(input.TodayChange))
                ) && 
                (
                    this.TodayChangePercentage == input.TodayChangePercentage ||
                    (this.TodayChangePercentage != null &&
                    this.TodayChangePercentage.Equals(input.TodayChangePercentage))
                ) && 
                (
                    this.LatestCompletedTradingDayOpen == input.LatestCompletedTradingDayOpen ||
                    (this.LatestCompletedTradingDayOpen != null &&
                    this.LatestCompletedTradingDayOpen.Equals(input.LatestCompletedTradingDayOpen))
                ) && 
                (
                    this.LatestCompletedTradingDayHigh == input.LatestCompletedTradingDayHigh ||
                    (this.LatestCompletedTradingDayHigh != null &&
                    this.LatestCompletedTradingDayHigh.Equals(input.LatestCompletedTradingDayHigh))
                ) && 
                (
                    this.LatestCompletedTradingDayLow == input.LatestCompletedTradingDayLow ||
                    (this.LatestCompletedTradingDayLow != null &&
                    this.LatestCompletedTradingDayLow.Equals(input.LatestCompletedTradingDayLow))
                ) && 
                (
                    this.LatestCompletedTradingDayClose == input.LatestCompletedTradingDayClose ||
                    (this.LatestCompletedTradingDayClose != null &&
                    this.LatestCompletedTradingDayClose.Equals(input.LatestCompletedTradingDayClose))
                ) && 
                (
                    this.LatestCompletedTradingDayChangePercentage == input.LatestCompletedTradingDayChangePercentage ||
                    (this.LatestCompletedTradingDayChangePercentage != null &&
                    this.LatestCompletedTradingDayChangePercentage.Equals(input.LatestCompletedTradingDayChangePercentage))
                ) && 
                (
                    this.LatestCompletedTradingDayChange == input.LatestCompletedTradingDayChange ||
                    (this.LatestCompletedTradingDayChange != null &&
                    this.LatestCompletedTradingDayChange.Equals(input.LatestCompletedTradingDayChange))
                ) && 
                (
                    this.LatestCompletedTradingDayTime == input.LatestCompletedTradingDayTime ||
                    (this.LatestCompletedTradingDayTime != null &&
                    this.LatestCompletedTradingDayTime.Equals(input.LatestCompletedTradingDayTime))
                ) && 
                (
                    this.LatestCompletedTradingDayVolume == input.LatestCompletedTradingDayVolume ||
                    (this.LatestCompletedTradingDayVolume != null &&
                    this.LatestCompletedTradingDayVolume.Equals(input.LatestCompletedTradingDayVolume))
                ) && 
                (
                    this.FiftyTwoWeekLow == input.FiftyTwoWeekLow ||
                    (this.FiftyTwoWeekLow != null &&
                    this.FiftyTwoWeekLow.Equals(input.FiftyTwoWeekLow))
                ) && 
                (
                    this.FiftyTwoWeekHigh == input.FiftyTwoWeekHigh ||
                    (this.FiftyTwoWeekHigh != null &&
                    this.FiftyTwoWeekHigh.Equals(input.FiftyTwoWeekHigh))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CompanyName != null)
                    hashCode = hashCode * 59 + this.CompanyName.GetHashCode();
                if (this.MarketCap != null)
                    hashCode = hashCode * 59 + this.MarketCap.GetHashCode();
                if (this.CurrentPrice != null)
                    hashCode = hashCode * 59 + this.CurrentPrice.GetHashCode();
                if (this.TodayOpen != null)
                    hashCode = hashCode * 59 + this.TodayOpen.GetHashCode();
                if (this.TodayHigh != null)
                    hashCode = hashCode * 59 + this.TodayHigh.GetHashCode();
                if (this.TodayLow != null)
                    hashCode = hashCode * 59 + this.TodayLow.GetHashCode();
                if (this.TodayTime != null)
                    hashCode = hashCode * 59 + this.TodayTime.GetHashCode();
                if (this.TodayVolume != null)
                    hashCode = hashCode * 59 + this.TodayVolume.GetHashCode();
                if (this.TodayChange != null)
                    hashCode = hashCode * 59 + this.TodayChange.GetHashCode();
                if (this.TodayChangePercentage != null)
                    hashCode = hashCode * 59 + this.TodayChangePercentage.GetHashCode();
                if (this.LatestCompletedTradingDayOpen != null)
                    hashCode = hashCode * 59 + this.LatestCompletedTradingDayOpen.GetHashCode();
                if (this.LatestCompletedTradingDayHigh != null)
                    hashCode = hashCode * 59 + this.LatestCompletedTradingDayHigh.GetHashCode();
                if (this.LatestCompletedTradingDayLow != null)
                    hashCode = hashCode * 59 + this.LatestCompletedTradingDayLow.GetHashCode();
                if (this.LatestCompletedTradingDayClose != null)
                    hashCode = hashCode * 59 + this.LatestCompletedTradingDayClose.GetHashCode();
                if (this.LatestCompletedTradingDayChangePercentage != null)
                    hashCode = hashCode * 59 + this.LatestCompletedTradingDayChangePercentage.GetHashCode();
                if (this.LatestCompletedTradingDayChange != null)
                    hashCode = hashCode * 59 + this.LatestCompletedTradingDayChange.GetHashCode();
                if (this.LatestCompletedTradingDayTime != null)
                    hashCode = hashCode * 59 + this.LatestCompletedTradingDayTime.GetHashCode();
                if (this.LatestCompletedTradingDayVolume != null)
                    hashCode = hashCode * 59 + this.LatestCompletedTradingDayVolume.GetHashCode();
                if (this.FiftyTwoWeekLow != null)
                    hashCode = hashCode * 59 + this.FiftyTwoWeekLow.GetHashCode();
                if (this.FiftyTwoWeekHigh != null)
                    hashCode = hashCode * 59 + this.FiftyTwoWeekHigh.GetHashCode();
                return hashCode;
            }
        }
    }
}
